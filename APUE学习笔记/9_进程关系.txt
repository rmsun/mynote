Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.4
Creation-Date: 2011-10-20T15:54:29+08:00

====== 9 进程关系 ======
Created Thursday 20 October 2011

By:             潘云登
Date:          2009-8-15
Email:         intrepyd@gmail.com
Homepage: http://blog.csdn.net/intrepyd
Copyright: 该文章版权由潘云登所有。可在非商业目的下任意传播和复制。
对于商业目的下对本文的任何行为需经作者同意。

写在前面
1.          本文内容对应《UNIX环境高级编程》(第2版)》第9章。
2.          总结了关于进程关系和作业控制的一些概念。
3.          希望本文对您有所帮助，也欢迎您给我提意见和建议。

l         
可以用ps -o pid,ppid,pgrp,session,tpgid,comm命令，显示进程ID，父进程ID，进程组ID，会话ID，前台进程组ID和命令。
l          每个进程除了有一个进程ID之外，还属于一个进程组。进程可以通过调用setpgid加入一个现有的组或者创建一个新进程组。
l          每个进程组有一个组长进程，其标识是：进程组ID等于其进程ID。只要组中有一个进程存在，则该进程组就存在，这与组长进程是否终止无关。从进程组创建开始到其中最后一个进程离开为止的时间区间称为进程组的生存期。
l          一个进程只能为它自己或它的子进程设置进程组ID。在它的子进程调用exec函数之一后，它就不能改变该子进程的进程组ID。
l          如果调用setsid函数的进程不是一个进程组的组长，则此函数创建一个新会话。1）该进程变成新会话首进程，此时该进程是新会话中唯一的进程；2）该进程成为一个新进程组的组长进程。该进程没有控制终端，如果该进程在setsid之前有一个控制终端，那么这种联系也会被中断。如果调用进程已经是一个进程组的组长，则setsid函数返回出错。
l          登录shell是与控制终端连接的会话首进程，即控制进程。当有前台进程组时，它属于后台进程组。如果没有前台进程，前台进程组ID将被设置为shell的进程ID，也是其进程组ID。
l          一个会话中只有一个前台进程组，但可以有多个后台进程组。
l          用管道线连接的多个进程属于一个进程组。在bash下，它们都是shell的子进程。
l          中断（Ctrl+C，SIGINT）、退出（Ctrl+/，SIGQUIT）和挂起（Ctrl+Z，SIGTSTP）字符产生的信号发送到前台进程组。
l          前台进程组可以读写终端。
l          后台进程试图读终端，将导致终端驱动程序向该后台进程发送SIGTTIN信号，该信号通常会暂停此后台进程。
l          默认情况下，后台进程可以写终端。可以使用stty tostop命令禁止。禁止后，将导致终端驱动程序向该后台进程发送SIGTTOU信号，该信号通常会暂停此后台进程。
l          如果后台进程组是孤儿进程组，并试图读写终端，那么，SIGTTIN或SIGTTOU信号将使进程在暂停后无法继续，因此，读写操作将直接出错返回，errno设置为EIO（5）。
